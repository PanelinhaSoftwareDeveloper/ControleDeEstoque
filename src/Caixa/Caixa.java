/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Caixa;

import ConexaoBanco.ConexaoBanco;
import ConfiguracoesSistema.ConfiguracoesSistema;
import DimensionaImagem.DimensionaImagem;
import TrataFloat.TrocaVirgulaPorPonto;
import Usuarios.Usuarios;
import java.awt.Font;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Marcos
 */

public final class Caixa extends javax.swing.JFrame {
    
    DimensionaImagem dimImagem = new DimensionaImagem();
    TrocaVirgulaPorPonto troca = new TrocaVirgulaPorPonto();
    ConexaoBanco banco = new ConexaoBanco();
    public java.sql.PreparedStatement ps;
    public java.sql.ResultSet rs;
    Usuarios usuarios = new Usuarios();
    int codUsuario;
    DefaultTableModel modelo;
    SimpleDateFormat sdf = new SimpleDateFormat();
    /**
     * Creates new form Caixa
     */
    public Caixa() {
        initComponents(); 
        
        Font font = new Font("NSimSun", Font.PLAIN, 18);
        
        JTableHeader cabecalhoCaixa = tabelaCaixa.getTableHeader();
        cabecalhoCaixa.setFont(font);    
        
        dimImagem.dimensionaComponentes(lblImagemFundo, "/ControleDeEstoque/Imagens/ImagemFundoCadastro.jpg", 890, 390);
        lblImagemFundo1.setIcon(new ImageIcon("/ControleDeEstoque/Imagens/ImagemFundoCliente.jpg"));
        
    }
    
    public void setUsuario(String Usuario) {
        lblNomeUsuario.setText(Usuario);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        InternalFrameLancamento = new javax.swing.JInternalFrame();
        InternalFrameFornecedor = new javax.swing.JInternalFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtFormadePagamento = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaFornecedor = new javax.swing.JTable();
        btnOkFornecedor = new javax.swing.JButton();
        btnSairFornecedor = new javax.swing.JButton();
        lblImagemFundo4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        txtParcelas = new javax.swing.JSpinner();
        txtResponsavel = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboData = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lblDataCadastro = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtCategoria = new javax.swing.JTextField();
        btnEscolherCategoria = new javax.swing.JButton();
        txtHora = new javax.swing.JFormattedTextField();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        btnEscolherCategoria1 = new javax.swing.JButton();
        txtCategoria2 = new javax.swing.JTextField();
        lblImagemFundo = new javax.swing.JLabel();
        lblData1 = new javax.swing.JLabel();
        lblData2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblNomeUsuario = new javax.swing.JLabel();
        lblCodigo1 = new javax.swing.JLabel();
        lblCodigo2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCaixa = new javax.swing.JTable();
        btnAbrirCaixa = new javax.swing.JButton();
        btnLancar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lblSaldo = new javax.swing.JLabel();
        btnFecharCaixa = new javax.swing.JButton();
        lblImagemFundo1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Caixa");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        InternalFrameLancamento.setClosable(true);
        InternalFrameLancamento.setTitle("LanÃ§amento de receita no caixa");
        InternalFrameLancamento.setVisible(true);
        InternalFrameLancamento.getContentPane().setLayout(null);

        InternalFrameFornecedor.setClosable(true);
        InternalFrameFornecedor.setTitle("Forma de pagamento");
        InternalFrameFornecedor.setVisible(true);
        InternalFrameFornecedor.addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                InternalFrameFornecedorInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jLabel12.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel12.setText("Pesquisar forma de pagamento");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(20, 10, 260, 30);

        txtFormadePagamento.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        txtFormadePagamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFormadePagamentoKeyReleased(evt);
            }
        });
        jPanel2.add(txtFormadePagamento);
        txtFormadePagamento.setBounds(20, 40, 600, 32);

        tabelaFornecedor.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        tabelaFornecedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Forma de pagamento", "Tipo", "Cod"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaFornecedor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tabelaFornecedor.setRowHeight(25);
        tabelaFornecedor.setSelectionBackground(new java.awt.Color(102, 102, 255));
        tabelaFornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaFornecedorMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabelaFornecedor);
        if (tabelaFornecedor.getColumnModel().getColumnCount() > 0) {
            tabelaFornecedor.getColumnModel().getColumn(0).setPreferredWidth(500);
            tabelaFornecedor.getColumnModel().getColumn(1).setPreferredWidth(300);
            tabelaFornecedor.getColumnModel().getColumn(2).setPreferredWidth(90);
        }

        jPanel2.add(jScrollPane4);
        jScrollPane4.setBounds(20, 90, 600, 300);

        btnOkFornecedor.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        btnOkFornecedor.setText("Ok");
        btnOkFornecedor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnOkFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkFornecedorActionPerformed(evt);
            }
        });
        jPanel2.add(btnOkFornecedor);
        btnOkFornecedor.setBounds(20, 410, 100, 40);

        btnSairFornecedor.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        btnSairFornecedor.setText("Sair");
        btnSairFornecedor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSairFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairFornecedorActionPerformed(evt);
            }
        });
        jPanel2.add(btnSairFornecedor);
        btnSairFornecedor.setBounds(520, 410, 100, 40);
        jPanel2.add(lblImagemFundo4);
        lblImagemFundo4.setBounds(160, 330, 490, 130);

        javax.swing.GroupLayout InternalFrameFornecedorLayout = new javax.swing.GroupLayout(InternalFrameFornecedor.getContentPane());
        InternalFrameFornecedor.getContentPane().setLayout(InternalFrameFornecedorLayout);
        InternalFrameFornecedorLayout.setHorizontalGroup(
            InternalFrameFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
        );
        InternalFrameFornecedorLayout.setVerticalGroup(
            InternalFrameFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );

        InternalFrameLancamento.getContentPane().add(InternalFrameFornecedor);
        InternalFrameFornecedor.setBounds(0, 0, 660, 490);

        jButton1.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jButton1.setText("Salvar");
        InternalFrameLancamento.getContentPane().add(jButton1);
        jButton1.setBounds(20, 340, 100, 35);

        jLabel8.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel8.setText("Forma de pagamento");
        InternalFrameLancamento.getContentPane().add(jLabel8);
        jLabel8.setBounds(20, 170, 170, 30);

        lblCodigo.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        lblCodigo.setForeground(new java.awt.Color(255, 0, 0));
        lblCodigo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCodigo.setText("CÃ³digo");
        InternalFrameLancamento.getContentPane().add(lblCodigo);
        lblCodigo.setBounds(20, 40, 60, 30);

        txtParcelas.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        InternalFrameLancamento.getContentPane().add(txtParcelas);
        txtParcelas.setBounds(360, 120, 70, 32);

        txtResponsavel.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        InternalFrameLancamento.getContentPane().add(txtResponsavel);
        txtResponsavel.setBounds(20, 120, 310, 32);

        txtDescricao.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        InternalFrameLancamento.getContentPane().add(txtDescricao);
        txtDescricao.setBounds(120, 40, 560, 32);

        jLabel1.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel1.setText("DescriÃ§Ã£o");
        InternalFrameLancamento.getContentPane().add(jLabel1);
        jLabel1.setBounds(120, 10, 90, 30);

        jLabel2.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel2.setText("ResponsÃ¡vel");
        InternalFrameLancamento.getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 90, 100, 30);

        jLabel4.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel4.setText("CÃ³digo");
        InternalFrameLancamento.getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 10, 54, 30);

        comboData.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        InternalFrameLancamento.getContentPane().add(comboData);
        comboData.setBounds(460, 120, 220, 32);

        jLabel6.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel6.setText("Data");
        InternalFrameLancamento.getContentPane().add(jLabel6);
        jLabel6.setBounds(460, 90, 36, 30);

        jLabel5.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel5.setText("Parcelas");
        InternalFrameLancamento.getContentPane().add(jLabel5);
        jLabel5.setBounds(360, 90, 80, 30);

        jLabel9.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel9.setText("Valor");
        InternalFrameLancamento.getContentPane().add(jLabel9);
        jLabel9.setBounds(20, 250, 63, 30);

        jTextField4.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        InternalFrameLancamento.getContentPane().add(jTextField4);
        jTextField4.setBounds(20, 280, 80, 32);

        jLabel10.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel10.setText("Categoria");
        InternalFrameLancamento.getContentPane().add(jLabel10);
        jLabel10.setBounds(460, 170, 90, 30);

        lblDataCadastro.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        lblDataCadastro.setForeground(new java.awt.Color(255, 0, 0));
        lblDataCadastro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDataCadastro.setText("Data do cadastro");
        InternalFrameLancamento.getContentPane().add(lblDataCadastro);
        lblDataCadastro.setBounds(720, 40, 150, 30);

        jLabel19.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel19.setText("Cadastrado em");
        InternalFrameLancamento.getContentPane().add(jLabel19);
        jLabel19.setBounds(720, 10, 130, 30);

        txtCategoria.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        InternalFrameLancamento.getContentPane().add(txtCategoria);
        txtCategoria.setBounds(20, 200, 370, 32);

        btnEscolherCategoria.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        btnEscolherCategoria.setText("...");
        InternalFrameLancamento.getContentPane().add(btnEscolherCategoria);
        btnEscolherCategoria.setBounds(390, 200, 40, 32);

        txtHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        InternalFrameLancamento.getContentPane().add(txtHora);
        txtHora.setBounds(710, 120, 130, 32);

        jButton3.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jButton3.setText("Sair");
        InternalFrameLancamento.getContentPane().add(jButton3);
        jButton3.setBounds(130, 340, 100, 35);

        jLabel11.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel11.setText("Hora");
        InternalFrameLancamento.getContentPane().add(jLabel11);
        jLabel11.setBounds(710, 100, 36, 21);

        btnEscolherCategoria1.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        btnEscolherCategoria1.setText("...");
        InternalFrameLancamento.getContentPane().add(btnEscolherCategoria1);
        btnEscolherCategoria1.setBounds(800, 200, 40, 32);

        txtCategoria2.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        InternalFrameLancamento.getContentPane().add(txtCategoria2);
        txtCategoria2.setBounds(460, 200, 340, 32);
        InternalFrameLancamento.getContentPane().add(lblImagemFundo);
        lblImagemFundo.setBounds(0, 0, 890, 390);

        jPanel1.add(InternalFrameLancamento);
        InternalFrameLancamento.setBounds(0, 0, 900, 560);

        lblData1.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        lblData1.setText("Data:");
        jPanel1.add(lblData1);
        lblData1.setBounds(20, 20, 50, 20);

        lblData2.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        lblData2.setForeground(new java.awt.Color(255, 0, 0));
        lblData2.setText("Data");
        jPanel1.add(lblData2);
        lblData2.setBounds(70, 20, 190, 21);

        jLabel3.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel3.setText("UsuÃ¡rio:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(420, 20, 80, 21);

        lblNomeUsuario.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        lblNomeUsuario.setForeground(new java.awt.Color(255, 0, 0));
        lblNomeUsuario.setText("Nome");
        jPanel1.add(lblNomeUsuario);
        lblNomeUsuario.setBounds(500, 20, 200, 21);

        lblCodigo1.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        lblCodigo1.setText("CÃ³digo do caixa:");
        jPanel1.add(lblCodigo1);
        lblCodigo1.setBounds(880, 20, 150, 21);

        lblCodigo2.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        lblCodigo2.setForeground(new java.awt.Color(255, 0, 0));
        lblCodigo2.setText("Cod");
        jPanel1.add(lblCodigo2);
        lblCodigo2.setBounds(1030, 20, 70, 21);

        tabelaCaixa.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        tabelaCaixa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DescriÃ§Ã£o", "Categoria", "Valor", "Forma de pagto", "Data", "ResponsÃ¡vel", "Cod"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaCaixa.setRowHeight(25);
        tabelaCaixa.setSelectionBackground(new java.awt.Color(102, 102, 255));
        jScrollPane1.setViewportView(tabelaCaixa);
        if (tabelaCaixa.getColumnModel().getColumnCount() > 0) {
            tabelaCaixa.getColumnModel().getColumn(0).setPreferredWidth(400);
            tabelaCaixa.getColumnModel().getColumn(1).setPreferredWidth(200);
            tabelaCaixa.getColumnModel().getColumn(2).setPreferredWidth(110);
            tabelaCaixa.getColumnModel().getColumn(3).setPreferredWidth(200);
            tabelaCaixa.getColumnModel().getColumn(4).setPreferredWidth(250);
            tabelaCaixa.getColumnModel().getColumn(5).setPreferredWidth(230);
            tabelaCaixa.getColumnModel().getColumn(6).setPreferredWidth(60);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 60, 1060, 340);

        btnAbrirCaixa.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        btnAbrirCaixa.setText("Abrir Caixa");
        btnAbrirCaixa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAbrirCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirCaixaActionPerformed(evt);
            }
        });
        jPanel1.add(btnAbrirCaixa);
        btnAbrirCaixa.setBounds(20, 510, 140, 35);

        btnLancar.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        btnLancar.setText("LanÃ§ar");
        btnLancar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLancarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLancar);
        btnLancar.setBounds(170, 510, 140, 35);

        btnAlterar.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(btnAlterar);
        btnAlterar.setBounds(320, 510, 140, 35);

        btnImprimir.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        jPanel1.add(btnImprimir);
        btnImprimir.setBounds(790, 510, 140, 35);

        jButton5.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jButton5.setText("Fechar");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(940, 510, 140, 35);

        btnExcluir.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jPanel1.add(btnExcluir);
        btnExcluir.setBounds(470, 510, 140, 35);

        jLabel7.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        jLabel7.setText("Saldo do caixa: R$");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(20, 450, 170, 20);

        lblSaldo.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        lblSaldo.setForeground(new java.awt.Color(255, 0, 0));
        lblSaldo.setText("0,00");
        jPanel1.add(lblSaldo);
        lblSaldo.setBounds(190, 450, 300, 20);

        btnFecharCaixa.setFont(new java.awt.Font("NSimSun", 0, 18)); // NOI18N
        btnFecharCaixa.setText("Fechar Caixa");
        btnFecharCaixa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFecharCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharCaixaActionPerformed(evt);
            }
        });
        jPanel1.add(btnFecharCaixa);
        btnFecharCaixa.setBounds(620, 510, 140, 35);
        jPanel1.add(lblImagemFundo1);
        lblImagemFundo1.setBounds(720, 400, 380, 160);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1100, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAbrirCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirCaixaActionPerformed
        
        if (verificaCaixaAberto(codUsuario)==true)
        {
            JOptionPane.showMessageDialog(null, "Este usuÃ¡rio jÃ¡ tem um caixa aberto!\nFeche este caixa para abrir outro!", "AtenÃ§Ã£o!", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            int resp = JOptionPane.showConfirmDialog(this, "Deseja abrir um caixa?", "AtenÃ§Ã£o", 
                    JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE,
                    new ImageIcon("/ControleDeEstoque/Imagens/IconeMensagemPergunta.png"));
            if (resp == 0)
            {                
                ConfiguracoesSistema conf = new ConfiguracoesSistema();
                if (conf.verificaSaldoCaixaAnterior() == true)
                {
                    float saldoAnterior = retornaSaldoCaixaAnterior();
                    int resp1 = JOptionPane.showConfirmDialog(null, "VocÃª quer abrir o caixa com o saldo do caixa anterior de "+saldoAnterior+"?", 
                            "AtenÃ§Ã£o", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, 
                            new ImageIcon("/ControleDeEstoque/Imagens/IconeMensagemPergunta.png"));
                    
                    if (resp1 == 0)
                    {
                        abreCaixa(saldoAnterior);

                        lblCodigo2.setText(String.valueOf(retornaCodigoCaixa(codUsuario)));
                        lblData2.setText(retornaDataAberturaCaixa(codUsuario));
                        lblSaldo.setText(retornaSaldoCaixa());

                        lblData1.setVisible(true);
                        lblData2.setVisible(true);

                        lblCodigo1.setVisible(true);
                        lblCodigo2.setVisible(true);

                        btnAbrirCaixa.setEnabled(false);
                        btnExcluir.setEnabled(true);
                        btnAlterar.setEnabled(true);
                        btnLancar.setEnabled(true);

                        btnImprimir.setEnabled(true);

                        registraMovimentacao(retornaCodigoCaixa(codUsuario), "Abertura de caixa", "Abertura", saldoAnterior, "Dinheiro", new Date(), codUsuario);
                        retornaMovimentacaoCaixa(retornaCodigoCaixa(codUsuario));
                    }
                    else
                    {
                        String valor = JOptionPane.showInputDialog(null, "Digite um valor de abertura!", "AtenÃ§Ã£o",
                                JOptionPane.PLAIN_MESSAGE);
                        
                        float valorCaixa = troca.trocaVirgulaPorPonto(valor);

                        abreCaixa(valorCaixa);

                        lblCodigo2.setText(String.valueOf(retornaCodigoCaixa(codUsuario)));
                        lblData2.setText(retornaDataAberturaCaixa(codUsuario));
                        lblSaldo.setText(retornaSaldoCaixa());

                        lblData1.setVisible(true);
                        lblData2.setVisible(true);

                        lblCodigo1.setVisible(true);
                        lblCodigo2.setVisible(true);

                        btnAbrirCaixa.setEnabled(false);
                        btnExcluir.setEnabled(true);
                        btnAlterar.setEnabled(true);
                        btnLancar.setEnabled(true);

                        btnImprimir.setEnabled(true);

                        registraMovimentacao(retornaCodigoCaixa(codUsuario), "Abertura de caixa", "Abertura", valorCaixa, "Dinheiro", new Date(), codUsuario);
                        retornaMovimentacaoCaixa(retornaCodigoCaixa(codUsuario));
                    }
                }
                else
                {
                    Object[] options = {"Ok", "Cancelar"};
                    String valor = JOptionPane.showInputDialog(null, "Digite um valor de abertura!", "AtenÃ§Ã£o", 
                            JOptionPane.QUESTION_MESSAGE, new ImageIcon("/ControleDeEstoque/Imagens/IconeMensagemAviso.png"), 
                            options, "0,00").toString();

                    float valorCaixa = 0;
                    TrocaVirgulaPorPonto troca = new TrocaVirgulaPorPonto();
                    valorCaixa = troca.trocaVirgulaPorPonto(valor);

                    abreCaixa(valorCaixa);

                    lblCodigo2.setText(String.valueOf(retornaCodigoCaixa(codUsuario)));
                    lblData2.setText(retornaDataAberturaCaixa(codUsuario));
                    lblSaldo.setText(retornaSaldoCaixa());

                    lblData1.setVisible(true);
                    lblData2.setVisible(true);

                    lblCodigo1.setVisible(true);
                    lblCodigo2.setVisible(true);

                    btnAbrirCaixa.setEnabled(false);
                    btnExcluir.setEnabled(true);
                    btnAlterar.setEnabled(true);
                    btnLancar.setEnabled(true);

                    btnImprimir.setEnabled(true);

                    registraMovimentacao(retornaCodigoCaixa(codUsuario), "Abertura de caixa", "Abertura", valorCaixa, "Dinheiro", new Date(), codUsuario);
                    retornaMovimentacaoCaixa(retornaCodigoCaixa(codUsuario));
                }
            }
        }
        
    }//GEN-LAST:event_btnAbrirCaixaActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        this.dispose();
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        
        codUsuario = usuarios.retornaCodUsuario(lblNomeUsuario.getText());       
        
        if (verificaCaixaAberto(codUsuario) == true) 
        {
            lblCodigo2.setText(String.valueOf(retornaCodigoCaixa(codUsuario)));
            lblData2.setText(retornaDataAberturaCaixa(codUsuario));
            lblSaldo.setText(retornaSaldoCaixa());
            retornaMovimentacaoCaixa(retornaCodigoCaixa(codUsuario));
            
            lblData1.setVisible(true);
            lblData2.setVisible(true);

            lblCodigo1.setVisible(true);
            lblCodigo2.setVisible(true);
            
            btnAbrirCaixa.setEnabled(false);
            btnExcluir.setEnabled(true);
            btnAlterar.setEnabled(true);
            btnLancar.setEnabled(true);
            
            btnImprimir.setEnabled(true);
        } 
        else 
        {
            modelo = (DefaultTableModel) tabelaCaixa.getModel();
            modelo.setRowCount(0);
            
            lblData1.setVisible(false);
            lblData2.setVisible(false);

            lblCodigo1.setVisible(false);
            lblCodigo2.setVisible(false);
            
            lblSaldo.setText("0,00");
            
            btnAbrirCaixa.setEnabled(true);
            btnExcluir.setEnabled(false);
            btnAlterar.setEnabled(false);
            btnLancar.setEnabled(false);
            
            btnImprimir.setVisible(false);
        }
        
    }//GEN-LAST:event_formWindowActivated

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        
        if (verificaCaixaAberto(codUsuario) == false)
        {
            JOptionPane.showMessageDialog(null, "VocÃª nÃ£o tem um caixa aberto!", "AtenÃ§Ã£o", 
                     JOptionPane.PLAIN_MESSAGE, new ImageIcon("/ControleDeEstoque/Imagens/IconeMensagemErro.png"));
        }
        else
        {
            int resp = JOptionPane.showConfirmDialog(null, "Deseja realmente fechar este caixa?", "AtenÃ§Ã£o", 
                    JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, new ImageIcon("/ControleDeEstoque/Imagens/IconeMensagemAviso.png"));
            if (resp == 0)
            {
                int codCaixa = retornaCodigoCaixa(codUsuario);
                fecharCaixa(retornaValorTotalCaixa(codCaixa), retornaValorDinheiroCaixa(codCaixa), codCaixa);

                this.setVisible(false);
                this.setVisible(true);
            }
        }
        
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLancarActionPerformed
        
        txtDescricao.setText("");
        txtResponsavel.setText("");
        txtParcelas.setValue(1);
        comboData.setDate(new Date());
        sdf.applyPattern("HH:mm");
        
        Object[] options = {"Receita", "Despesa", "Cancelar"};
        int resp = JOptionPane.showOptionDialog(null, "Deseja realizar qual tipo de lanÃ§amento?", "AtenÃ§Ã£o", 
                JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE,null, options, "Receita");
        if (resp == 0)
        {
            txtParcelas.setValue(1);
            txtHora.setText(sdf.format(new Date()));
            InternalFrameLancamento.setVisible(true);
        }
        else if (resp == 1)
        {
            
        }
        
    }//GEN-LAST:event_btnLancarActionPerformed

    private void btnFecharCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharCaixaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFecharCaixaActionPerformed

    private void txtFormadePagamentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFormadePagamentoKeyReleased

        //fornecedores.carregaFornecedor(txtFormadePagamento.getText(), (DefaultTableModel) tabelaFornecedor.getModel(), lblStatusFornecedor);

    }//GEN-LAST:event_txtFormadePagamentoKeyReleased

    private void tabelaFornecedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaFornecedorMouseClicked

        if (evt.getClickCount() == 2)
        {
            btnOkFornecedorActionPerformed(null);
        }

    }//GEN-LAST:event_tabelaFornecedorMouseClicked

    private void btnOkFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkFornecedorActionPerformed

        int linha = tabelaFornecedor.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione um fornecedor na tabela!", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
        } else {
            txtFormadePagamento.setText(tabelaFornecedor.getModel().getValueAt(linha, 0).toString());
            //codFornecedor = Integer.valueOf(tabelaFornecedor.getModel().getValueAt(linha, 2).toString());

            InternalFrameFornecedor.dispose();
        }

    }//GEN-LAST:event_btnOkFornecedorActionPerformed

    private void btnSairFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairFornecedorActionPerformed

        InternalFrameFornecedor.dispose();

    }//GEN-LAST:event_btnSairFornecedorActionPerformed

    private void InternalFrameFornecedorInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_InternalFrameFornecedorInternalFrameClosed
/*
        txtDescricao.setEnabled(true);
        txtFornecedor.setEnabled(true);
        txtNota.setEnabled(true);
        txtResponsavel.setEnabled(true);
        tabelaProdutosCompra.setEnabled(true);
        btnAdd.setEnabled(true);
        btnRemover.setEnabled(true);
        tabelaParcela.setEnabled(true);
        txtFormaPagto.setEnabled(true);
        txtParcelas.setEnabled(true);
        txtPagto.setEnabled(true);
        btnPesquisarFornecedor.setEnabled(true);

        btnPesquisarFornecedor.grabFocus(); */

    }//GEN-LAST:event_InternalFrameFornecedorInternalFrameClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Caixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Caixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Caixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Caixa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Caixa().setVisible(true);
            }
        });
    }
    
    //METODOS
    
    public void abreCaixa(float valor) {
        
        try
        {            
            banco.conexaoBanco();
            ps = banco.con.prepareStatement("insert into caixas (Valor_Inicial, Codigo_Usuario) "
                    + "values (?,?)");
            ps.setFloat(1, valor);
            ps.setInt(2, codUsuario);
            ps.executeUpdate();
            
            ps.close();
            banco.fecharConexaoBanco();
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        
    }
    
    public boolean verificaCaixaAberto(int codUsuario) {
        boolean Flag = false;
        try
        {            
            banco.conexaoBanco();
            rs = banco.st.executeQuery("select * from caixas where Aberto = 1 "
                    + "and Codigo_Usuario = "+codUsuario);
            while (rs.next())
            {
                Flag = true;
            }
            
            rs.close();
            banco.fecharConexaoBanco();
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        return Flag;
    }
    
    public int retornaCodigoCaixa(int codUsuario) {
        
        int codCaixa = 0;
        try
        {            
            banco.conexaoBanco();
            rs = banco.st.executeQuery("select * from caixas where Aberto = 1 "
                    + "and Codigo_Usuario = "+codUsuario);
            while (rs.next())
            {
                codCaixa = rs.getInt("Codigo_Caixa");
            }
            
            rs.close();
            banco.fecharConexaoBanco();
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        return codCaixa;
        
    }
    
    public void registraMovimentacao(int codigoCaixa, String Descricao, String Categoria, float valor,
            String formaPagamento, Date data, int codigoUsuario) {
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        String dataFormatada = sdf.format(data);
        
        try
        {            
            banco.conexaoBanco();
            ps = banco.con.prepareStatement("insert into movimentacoes_caixa (Codigo_Caixa, Descricao, Categoria,"
                    + "Valor, Forma_Pagamento, Data, Codigo_Usuario) values (?, ?, ?, ?, ?, ?, ?)");
            ps.setInt(1, codigoCaixa);
            ps.setString(2, Descricao);
            ps.setString(3, Categoria);
            ps.setFloat(4, valor);
            ps.setString(5, formaPagamento);
            ps.setString(6, dataFormatada);
            ps.setInt(7, codigoUsuario);
            ps.executeUpdate();
            
            ps.close();
            banco.fecharConexaoBanco();
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }  
    }
    
    public String retornaDataAberturaCaixa(int codUsuario) {
        
        String dataAbertura = "";
        try
        {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            banco.conexaoBanco();
            rs = banco.st.executeQuery("select Data_Abertura from caixas where Aberto = 1 "
                    + "and Codigo_Usuario = "+codUsuario);
            while (rs.next())
            {
                dataAbertura = sdf.format(rs.getDate("Data_Abertura"));
            }
            rs.close();
            banco.fecharConexaoBanco();
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        return dataAbertura;
        
    }
    
    public String retornaSaldoCaixa() {
        
        int codCaixa = retornaCodigoCaixa(codUsuario);
        float valor = 0;
        String valorFormatado = null;
        
        try
        {
            banco.conexaoBanco();
            rs = banco.st.executeQuery("select Valor from movimentacoes_caixa "
                    + "where Codigo_Usuario = '"+codUsuario+"' "
                    + "and Categoria = 'Entrada' and Forma_Pagamento = 'Dinheiro' "
                    + "and Codigo_Caixa = '"+codCaixa+"' "
                    + "or Categoria = 'Abertura' and Forma_Pagamento = 'Dinheiro' "
                    + "and Codigo_Caixa = '"+codCaixa+"'");
            while (rs.next())
            {
                valor = valor + rs.getFloat("Valor");
            }
            
            DecimalFormat dffloat = new DecimalFormat("##,###.00");
            valorFormatado = dffloat.format(valor);
            
            if (valorFormatado.equals(",00"))
            {
                valorFormatado = "0,00";
            }
            
            rs.close();
            banco.fecharConexaoBanco();
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        return valorFormatado;
    }
    
    public void retornaMovimentacaoCaixa(int codigoCaixa) {
        
        try
        {
            modelo = (DefaultTableModel) tabelaCaixa.getModel();
            modelo.setRowCount(0);
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            DecimalFormat dffloat = new DecimalFormat("##,###.00");
            String valorFormatado;
            
            banco.conexaoBanco();
            rs = banco.st.executeQuery("select movimentacoes_caixa.*, usuarios.Nome"
                    + " from movimentacoes_caixa "
                    + "inner join usuarios on movimentacoes_caixa.Codigo_Usuario = usuarios.Codigo_Usuario "
                    + "where Codigo_Caixa = "+codigoCaixa);
            while (rs.next())
            {
                valorFormatado = dffloat.format(rs.getFloat("movimentacoes_caixa.Valor"));
                if (valorFormatado.equals(",00")) {
                    valorFormatado = "0,00";
                }
                                
                modelo.addRow(new Object[] {
                    rs.getString("movimentacoes_caixa.Descricao"),
                    rs.getString("movimentacoes_caixa.Categoria"),
                    valorFormatado,
                    rs.getString("movimentacoes_caixa.Forma_Pagamento"),
                    sdf.format(rs.getDate("movimentacoes_caixa.Data")),
                    rs.getString("usuarios.Nome"),
                    rs.getInt("movimentacoes_caixa.Codigo_Movimentacao")
                });
            }
            rs.close();
            banco.fecharConexaoBanco();
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        
    }
    
    public float retornaValorTotalCaixa(int codCaixa) {
        
        float valor = 0;
        
        try
        {
            banco.conexaoBanco();
            rs = banco.st.executeQuery("select Valor from movimentacoes_caixa where Codigo_Caixa = "+codCaixa);
            while (rs.next())
            {
                valor = valor + rs.getFloat("Valor");
            }
            rs.close();
            banco.fecharConexaoBanco();
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        
        return valor;
        
    }
    
    public float retornaValorDinheiroCaixa(int codCaixa) {
        
        float valor = 0;
        
        try
        {
            banco.conexaoBanco();
            rs = banco.st.executeQuery("select Valor from movimentacoes_caixa where "
                    + "Forma_Pagamento = 'Dinheiro' and Codigo_Caixa = "+codCaixa);
            while (rs.next())
            {
                valor = valor + rs.getFloat("Valor");
            }
            rs.close();
            banco.fecharConexaoBanco();
        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }
        
        return valor;
        
    }
    
    public void fecharCaixa(float valorTotal, float valorDinheiro, int codCaixa) {
        
        try
        {
            banco.conexaoBanco();
            
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            String data = sdf.format(new Date());
            
            //fechar o caixa na tabela caixas
            ps = banco.con.prepareStatement("update caixas set Data_Fechamento = '"+data+"', "
                    + "Valor_Final = '"+valorTotal+"', "
                    + "Aberto = 0 where Codigo_Caixa = "+codCaixa);
            ps.executeUpdate();
            
            //adicionar o caixa fechado na tabela fechamentos_caixa
            ps = banco.con.prepareStatement("insert into fechamentos_caixa (Codigo_Caixa, Saldo_Dinheiro) values (?, ?)");
            ps.setInt(1, codCaixa);
            ps.setFloat(2, valorDinheiro);
            ps.executeUpdate();
            
            ps.close();
            banco.fecharConexaoBanco();
            
            JOptionPane.showMessageDialog(null, "Caixa fechado com sucesso!", "AtenÃ§Ã£o",
                    JOptionPane.PLAIN_MESSAGE, new ImageIcon("/ControleDeEstoque/Imagens/IconeMensagemInformacao.png"));
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        
    }
    
    public float retornaSaldoCaixaAnterior() {
        
        int maxCod = 0;
        float valor = 0;
        
        try
        {
            banco.conexaoBanco();
            rs = banco.st.executeQuery("select MAX(Codigo_Fechamento_Caixa) as maxCod from fechamentos_caixa");
            while (rs.next())
            {
                maxCod = rs.getInt("maxCod");
            }
            
            rs = banco.st.executeQuery("select Saldo_Dinheiro from fechamentos_caixa "
                    + "where Codigo_Fechamento_Caixa = "+maxCod);
            while (rs.next())
            {
                valor = rs.getFloat("Saldo_Dinheiro");
            }
            rs.close();
            banco.fecharConexaoBanco();
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        return valor;
    }
    
    public void retornaFormaPagamento(javax.swing.JComboBox comboBox) {
        
        comboBox.removeAllItems();
        comboBox.addItem("<Selecione");
        
        try
        {
            banco.conexaoBanco();
            rs = banco.st.executeQuery("");
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame InternalFrameFornecedor;
    private javax.swing.JInternalFrame InternalFrameLancamento;
    private javax.swing.JButton btnAbrirCaixa;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnEscolherCategoria;
    private javax.swing.JButton btnEscolherCategoria1;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFecharCaixa;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnLancar;
    private javax.swing.JButton btnOkFornecedor;
    private javax.swing.JButton btnSairFornecedor;
    private com.toedter.calendar.JDateChooser comboData;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblCodigo1;
    private javax.swing.JLabel lblCodigo2;
    private javax.swing.JLabel lblData1;
    private javax.swing.JLabel lblData2;
    private javax.swing.JLabel lblDataCadastro;
    private javax.swing.JLabel lblImagemFundo;
    private javax.swing.JLabel lblImagemFundo1;
    private javax.swing.JLabel lblImagemFundo4;
    private javax.swing.JLabel lblNomeUsuario;
    private javax.swing.JLabel lblSaldo;
    private javax.swing.JTable tabelaCaixa;
    private javax.swing.JTable tabelaFornecedor;
    private javax.swing.JTextField txtCategoria;
    private javax.swing.JTextField txtCategoria2;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtFormadePagamento;
    private javax.swing.JFormattedTextField txtHora;
    private javax.swing.JSpinner txtParcelas;
    private javax.swing.JTextField txtResponsavel;
    // End of variables declaration//GEN-END:variables
}
