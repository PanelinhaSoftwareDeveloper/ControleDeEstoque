/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Receitas;

import ConexaoBanco.ConexaoBanco;
import DimensionaImagem.DimensionaImagem;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcos
 */
public class Receitas extends javax.swing.JFrame {
    
    DimensionaImagem dimImagem = new DimensionaImagem();
    ConexaoBanco banco = new ConexaoBanco();
    public java.sql.PreparedStatement ps;
    public java.sql.ResultSet rs;
    public DefaultTableModel modelo;

    /**
     * Creates new form Receitas
     */
    public Receitas() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Receitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Receitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Receitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Receitas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Receitas().setVisible(true);
            }
        });
    }
    
    //METODOS
    
    public void cadastraReceita(String descricao, String responsavel, int codCliente, int qntParcelas,
            Date dataPagto, String formaPagto, float valor, float valorJuros, int codCategoria,
            int codUsuario) {
        
        float valorTotal = valor + valorJuros;
        int liquidado = 1;
        
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(dataPagto);
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String dataPagamento = sdf.format(calendar.getTime());
        String dataVencimento = dataPagamento;
        
        if (formaPagto.contains("Cartão de crédito"))
        {
            calendar.add(Calendar.DAY_OF_MONTH, 30);
            dataPagamento = sdf.format(calendar.getTime());
            dataVencimento = dataPagamento;
        }
        if (formaPagto.contains("Cartão de débito"))
        {
            calendar.add(Calendar.DAY_OF_MONTH, 1);
            dataPagamento = sdf.format(calendar.getTime());
            dataVencimento = dataPagamento;
        }
        
        try
        {
            banco.conexaoBanco();
            
            for (int i = 0; i<=qntParcelas; i++)
            {
                ps = banco.con.prepareStatement("insert into receitas "
                        + "(Descricao, Responsavel, Codigo_Cliente, Parcelas, Numero_Parcela, Data_Pagamento, Data_Vencimento, "
                        + "Forma_Pagamento, Valor, Valor_Juros_ Valor_Total, Codigo_Categoria, Liquidado, Codigo_Usuario) "
                        + "values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                ps.setString(1, descricao);
                ps.setString(2, responsavel);
                ps.setInt(3, codCliente);
                ps.setInt(4, qntParcelas);
                ps.setInt(5, i+1);
                ps.setString(6, dataPagamento);
                ps.setString(7, dataVencimento);
                ps.setString(8, formaPagto);
                ps.setFloat(9, valor);
                ps.setFloat(10, valorJuros);
                ps.setFloat(11, valorTotal);
                ps.setInt(12, codCategoria);
                ps.setInt(13, liquidado);
                ps.setInt(14, codUsuario);
                ps.executeUpdate();
                
                calendar.add(Calendar.DAY_OF_MONTH, 30);
                dataPagamento = sdf.format(calendar.getTime());
                dataVencimento = "";
                
                valorJuros = 0;
                valorTotal = valor + valorJuros;
                
                liquidado = 0;
                
            }
            
            ps.close();
            banco.fecharConexaoBanco();
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
